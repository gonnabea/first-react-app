{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","async","axios","get","data","setState","this","console","log","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kUA8BeA,MA1Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OAAO,yBAAKC,UAAU,iBACtB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACf,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,UACTD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACZ,wBAAIC,IAAKD,EAAOL,UAAU,iBACrBI,OAGT,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAG,KAAhD,UC8BWC,G,iNAvCbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAC2BE,IAAMC,IAAI,6DADrC,gBACSL,EADT,EACHM,KAAMA,KAAMN,OACnB,EAAKO,SAAS,CAACP,SAAQD,WAAW,IAFxB,sC,mFAKVS,KAAKP,c,+BAGE,IAAD,EACwBO,KAAKV,MAA3BC,EADF,EACEA,UAAWC,EADb,EACaA,OAEnB,OADAS,QAAQC,IAAIV,GACL,6BAASX,UAAU,aACvBU,EACD,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,eAGF,yBAAKA,UAAU,UACdW,EAAOR,KAAI,SAAAmB,GAAK,OACjB,kBAAC,EAAD,CACEhB,IAAKgB,EAAM5B,GACXA,GAAI4B,EAAM5B,GACVC,KAAM2B,EAAM3B,KACZC,MAAO0B,EAAM1B,MACbC,QAASyB,EAAMzB,QACfC,OAAQwB,EAAMC,mBACdxB,OAAQuB,EAAMvB,kB,GA/BJyB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b4fc109d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({id, year, title, summary, poster, genres}){\r\n    return <div className=\"movies__movie\">\r\n    <img src={poster} alt={title} title={title} />\r\n    <div className=\"movie__data\">\r\n    <h3 className=\"movie__title\">{title}</h3>\r\n    <h5 className=\"movie__year\">{year}</h5>\r\n    <ul className=\"genres\">\r\n        {genres.map((genre, index) =>( \r\n        <li key={index} className=\"genres__genre\">\r\n            {genre}</li>\r\n        ))}\r\n    </ul>\r\n    <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\r\n    </div>\r\n    </div>;\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport axios from \"axios\";\r\nimport Movie from \"./Movie\";\r\nimport \"./App.css\";\r\n\r\n\r\nclass App extends React.Component{\r\n  state = {\r\n    isLoading: true,\r\n    movies: []\r\n  }\r\n  getMovies = async() => {\r\n    const {data:{data:{movies}}} = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\r\n    this.setState({movies, isLoading: false})// movies : movies\r\n  }\r\n  componentDidMount(){\r\n    this.getMovies();\r\n\r\n  }\r\n  render(){\r\n    const { isLoading, movies } = this.state;\r\n    console.log(movies);\r\n    return <section className=\"container\">\r\n      {isLoading ?( \r\n      <div className=\"loader\">\r\n        <span className=\"loader__text\">Loading...</span>\r\n      </div>\r\n      ) : ( \r\n      <div className=\"movies\">\r\n      {movies.map(movie => (\r\n      <Movie \r\n        key={movie.id}\r\n        id={movie.id}\r\n        year={movie.year} \r\n        title={movie.title}\r\n        summary={movie.summary}\r\n        poster={movie.medium_cover_image}\r\n        genres={movie.genres}\r\n        />\r\n      ))}\r\n      </div>\r\n      )}\r\n        </section>\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}